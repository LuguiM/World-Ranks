import{r,c as m,o as k,b as l,d as o,t as c,F as u,h as p,v as C,a as n,s as T}from"./index-DFoD-9j3.js";const $={key:0},B={key:1,class:"flex flex-col justify-center items-center gap-y-4 lg:mx-14 p-5 lg:p-14 md:mt-14 xl:mt-0"},D=["src","alt"],E={class:"text-center mt-5"},S={class:"text-3xl"},A={class:"text-sm lg:text-lg font-normal"},M={class:"flex justify-around gap-x-3 lg:gap-x-10"},N={class:"bg-color2 p-5 rounded-xl font-normal"},F={class:"flex flex-col md:flex-row gap-y-1 lg:gap-x-6 text-xs lg:text-base"},H=["innerHTML"],O={class:"text-color4 font-normal"},R={class:"text-color5"},P={class:"m-5"},V={class:"pt-5 flex flex-wrap gap-3"},q=["onClick"],z=["src"],G={class:"text-sm font-normal text-color5"},K={__name:"country",setup(I){T();const _=C(),a=r([]),i=r({}),d=r({}),v=r([]),x=r([]),h=m(()=>[{text:"Population",numbers:a.value.population.toLocaleString()},{text:"Area km<sup>2</sup>",numbers:a.value.area.toLocaleString()}]),b=m(()=>[{label:"Capital",text:a.value.capital},{label:"Subregion",text:a.value.subregion},{label:"Language",text:a.value.languages},{label:"Currencies",text:a.value.currencies},{label:"Continents",text:a.value.region}]),y=m(()=>b.value.map(e=>{if(e.label==="Language"&&typeof e.text=="object"&&e.text!==null)return{...e,formattedText:Object.values(e.text).join(", ")};if(e.label==="Currencies"&&typeof e.text=="object"&&e.text!==null){const s=Object.values(e.text).map(t=>`${t.name} `);return{...e,formattedText:s.join(", ")}}else return Array.isArray(e.text)?{...e,formattedText:e.text.join(", ")}:{...e,formattedText:e.text}})),f=r(!0),w=()=>{try{v.value.map(async e=>{const t=await(await fetch(`https://restcountries.com/v3.1/alpha?codes=${e}`)).json();if(t.length>0){const g=t[0];x.value=[...x.value,{name:g.name.common,flag:g.flags}]}})}catch{}},j=async e=>{f.value=!0;try{const s=await fetch(`https://restcountries.com/v3.1/name/${e}`);if(!s.ok)throw new Error(`Error fetching data: ${s.status}`);const t=await s.json();t.length>0&&(a.value=t[0],v.value=a.value.borders,i.value=a.value.flags,d.value=a.value.name,w())}catch(s){console.error("Error fetching country data:",s.message)}finally{f.value=!1}},L=e=>{window.location.href=`../country/${e}`};return k(()=>{const e=_.params.name;e&&j(e)}),(e,s)=>(n(),l(u,null,[f.value?(n(),l("div",$,"Loading...")):(n(),l("div",B,[o("img",{src:i.value.svg,alt:i.value.alt,class:"w-[15rem] lg:w-[25rem] rounded-lg md:-mt-[7.5rem]"},null,8,D),o("div",E,[o("h1",S,c(d.value.common),1),o("p",A,c(d.value.official),1)]),o("div",M,[(n(!0),l(u,null,p(h.value,t=>(n(),l("div",N,[o("div",F,[o("p",{innerHTML:t.text},null,8,H),s[0]||(s[0]=o("span",{class:"border border-color1"},null,-1)),o("p",null,c(t.numbers),1)])]))),256))])])),(n(!0),l(u,null,p(y.value,t=>(n(),l("div",{key:t.label,class:"flex justify-between border-y border-color2 py-9 px-6"},[o("h1",O,c(t.label),1),o("p",R,c(t.formattedText),1)]))),128)),o("div",P,[s[1]||(s[1]=o("h1",{class:"text-color4 pt-4 font-normal"},"Neighbouring Countries",-1)),o("div",V,[(n(!0),l(u,null,p(x.value,t=>(n(),l("div",{class:"flex flex-col items-center gap-y-1 cursor-pointer",onClick:g=>L(t.name)},[o("img",{src:t.flag.png,alt:"",class:"h-[2.5rem] rounded-lg"},null,8,z),o("p",G,c(t.name),1)],8,q))),256))])])],64))}};export{K as default};
